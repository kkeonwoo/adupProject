/* *******************************************************
    * filename : common.scss
    * description : reset / common scss
    * date : 2024-05-14
******************************************************* */

/* *******************************************************
    * fonts *
******************************************************* */

/* Noto Sans KR */
@font-face {
    font-family: 'Noto Sans KR';
    font-weight: 100;
    src: url(../font/NotoSansKR/notokr-light.woff2) format('woff2'),
        url(../font/NotoSansKR/notokr-light.woff) format('woff');
}

@font-face {
    font-family: 'Noto Sans KR';
    font-weight: 400;
    src: url(../font/NotoSansKR/notokr-regular.woff2) format('woff2'),
        url(../font/NotoSansKR/notokr-regular.woff) format('woff');
}

@font-face {
    font-family: 'Noto Sans KR';
    font-weight: 500;
    src: url(../font/NotoSansKR/notokr-medium.woff2) format('woff2'),
        url(../font/NotoSansKR/notokr-medium.woff) format('woff');
}

@font-face {
    font-family: 'Noto Sans KR';
    font-weight: 700;
    src: url(../font/NotoSansKR/notokr-bold.woff2) format('woff2'),
        url(../font/NotoSansKR/notokr-bold.woff) format('woff');
}

.f_inherit {
    font-family: inherit;
    font-weight: inherit;
    font-size: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
}

@for $i from 1 through 9 {
    .fw_#{$i}00 {
        font-weight: #{$i}00 !important;
    }
}

.pc {
    display: block !important;
}

.mobile {
    display: none !important;
}

.blind {
    display: none !important;
}

.hidden {
    overflow: hidden !important;
}

.align-left {
    text-align: left !important;
}

/* display */
.d_flex {
    display: flex !important;
    width: 100%;
}

.d_block {
    display: block !important;
}

.d_inline_block {
    display: inline-block !important;
}

.d_inline {
    display: inline !important;
}

.d_none {
    display: none !important;
}

.d_flex.center {
    align-items: center;
    justify-content: center;
}

/* flex */
.flex_fill {
    flex: 1 1 auto !important;
}

.flex_row {
    flex-direction: row !important;
}

.flex_column {
    flex-direction: column !important;
}

.flex_row_reverse {
    flex-direction: row-reverse !important;
}

.flex_column_reverse {
    flex-direction: column-reverse !important;
}

.flex_grow_0 {
    flex-grow: 0 !important;
}

.flex_grow_1 {
    flex-grow: 1 !important;
}

.flex_shrink_0 {
    flex-shrink: 0 !important;
}

.flex_shrink_1 {
    flex-shrink: 1 !important;
}

.flex_wrap {
    flex-wrap: wrap !important;
}

.flex_nowrap {
    flex-wrap: nowrap !important;
}

.flex_wrap_reverse {
    flex-wrap: wrap-reverse !important;
}

.justify_content_start {
    justify-content: flex-start !important;
}

.justify_content_end {
    justify-content: flex-end !important;
}

.justify_content_center {
    justify-content: center !important;
}

.justify_content_between {
    justify-content: space-between !important;
}

.justify_content_around {
    justify-content: space-around !important;
}

.justify_content_evenly {
    justify-content: space-evenly !important;
}

.align_items_start {
    align-items: flex-start !important;
}

.align_items_end {
    align-items: flex-end !important;
}

.align_items_center {
    align-items: center !important;
}

.align_items_baseline {
    align-items: baseline !important;
}

.align_items_stretch {
    align-items: stretch !important;
}

.align_content_start {
    align-content: flex-start !important;
}

.align_content_end {
    align-content: flex-end !important;
}

.align_content_center {
    align-content: center !important;
}

.align_content_between {
    align-content: space-between !important;
}

.align_content_around {
    align-content: space-around !important;
}

.align_content_stretch {
    align-content: stretch !important;
}

.align_self_auto {
    align-self: auto !important;
}

.align_self_start {
    align-self: flex-start !important;
}

.align_self_end {
    align-self: flex-end !important;
}

.align_self_center {
    align-self: center !important;
}

.align_self_baseline {
    align-self: baseline !important;
}

.align_self_stretch {
    align-self: stretch !important;
}

@for $i from 1 through 12 {
    .col_#{$i} {
        max-width: calc(100% / 12 * #{$i});
        flex: 0 0 calc(100% / 12 * #{$i});
    }
}

@for $i from 1 through 100 {
    .gap_px_#{$i * 1} {
        gap: #{$i * 1px} !important;
    }
}

@for $i from 0 through 20 {
    .mt_#{$i * 5} {
        margin-top: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .mb_#{$i * 5} {
        margin-bottom: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .mx_#{$i * 5} {
        margin-left: calc(#{$i} * 5px);
        margin-right: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .my_#{$i * 5} {
        margin-top: calc(#{$i} * 5px);
        margin-bottom: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .pt_#{$i * 5} {
        padding-top: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .pb_#{$i * 5} {
        padding-bottom: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .px_#{$i * 5} {
        padding-left: calc(#{$i} * 5px);
        padding-right: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .py_#{$i * 5} {
        padding-top: calc(#{$i} * 5px);
        padding-bottom: calc(#{$i} * 5px);
    }
}

@for $i from 0 through 20 {
    .w_#{$i * 5} {
        width: #{$i * 5%} !important;
    }
}

@for $i from 0 through 20 {
    .w_px_#{$i * 10} {
        width: #{$i * 10px} !important;
    }
}